apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: terminal-mirror-com-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30000000"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30000000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30000000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30000000"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "30000000"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  tls:
  - hosts:
    - terminalmirror.com
    secretName: terminal-mirror-tls
  rules:

  - host: "terminalmirror.com"
    http:
      paths:
      - path: /
        backend:
          serviceName: terminal-mirror-com-service
          servicePort: 80

  - host: "www.terminalmirror.com"
    http:
      paths:
      - path: /
        backend:
          serviceName: terminal-mirror-com-service
          servicePort: 80

  - host: "terminalmirror.com"
    http:
      paths:
      - path: "/inputClient"
        backend:
          serviceName: curl-terminal-mirror-com-service
          servicePort: 3006

  - host: "terminalmirror.com"
    http:
      paths:
      - path: "/outputClient"
        backend:
          serviceName: curl-terminal-mirror-com-service
          servicePort: 3006

  - host: "terminalmirror.com"
    http:
      paths:
      - path: "/console-share"
        backend:
          serviceName: ws-terminal-mirror-com-service
          servicePort: 3005
